1. Tampilkan seluruh data dari tabel "employees" (5 Points)
   SELECT *
   FROM employees;

2. Berapa banyak karyawan yang memiliki posisi pekerjaan (job title) "Manager"? (5 Points)
   SELECT count(employee_id)
   FROM employees
   WHERE job_title = 'Manager';

3. Tampilkan daftar nama dan gaji (salary) dari karyawan yang bekerja di departemen "Sales" atau "Marketing" (10 Points)
   SELECT name, salary
   FROM employees 
   WHERE department IN ('Sales', 'Marketing');

4. Hitung rata-rata gaji (salary) dari karyawan yang bergabung (joined) dalam 5 tahun terakhir (berdasarkan kolom "joined_date") (10 Points)
   SELECT AVG(salary) AS average_salary
   FROM employees
   WHERE joined_date >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR);

5. Tampilkan 5 karyawan dengan total penjualan (sales) tertinggi dari tabel "employees" dan "sales_data" (10 Points)
   SELECT e.name AS employee_name, SUM(s.sales) AS total_sales
   FROM employees e
   JOIN sales_data s ON e.employee_id = s.employee_id
   GROUP BY e.employee_id, e.name
   ORDER BY total_sales DESC
   LIMIT 5;

6. Tampilkan nama, gaji (salary), dan rata-rata gaji (salary) dari semua karyawan yang bekerja di departemen yang memiliki rata-rata gaji lebih tinggi dari gaji rata-rata di semua departemen (15 Points)
   WITH
    department_avg_salary AS (
      SELECT department, AVG(salary) AS avg_salary_per_department
      FROM employees
      GROUP BY department),
    overall_avg_salary AS (
      SELECT AVG(salary) AS avg_salary_overall
      FROM employees)
   SELECT e.name AS employee_name, e.salary, d.avg_salary_per_department
   FROM employees e
   JOIN department_avg_salary d ON e.department = d.department
   WHERE d.avg_salary_per_department > (SELECT avg_salary_overall FROM overall_avg_salary);

7. Tampilkan nama dan total penjualan (sales) dari setiap karyawan, bersama dengan peringkat (ranking) masing-masing karyawan berdasarkan total penjualan. Peringkat 1 adalah karyawan dengan total penjualan tertinggi (25 Points)
   SELECT e.name AS employee_name, SUM(s.sales) AS total_sales, RANK() OVER (ORDER BY SUM(s.sales) DESC) AS rank
   FROM employees
   JOIN sales_data s ON e.employee_id = s.employee_id
   GROUP BY e.employee_id, e.name
   ORDER BY rank;

8. Buat sebuah stored procedure yang menerima nama departemen sebagai input, dan mengembalikan daftar karyawan dalam departemen tersebut bersama dengan total gaji (salary) yang mereka terima (20 Points)
   DELIMITER $$

   CREATE PROCEDURE GetEmployeesByDepartment(
       IN department_name VARCHAR(50)
   )
   BEGIN
       SELECT e.name AS employee_name, e.salary * TIMESTAMPDIFF(MONTH, e.joined_date, CURDATE()) AS total_salary
       FROM employees e
       WHERE e.department = department_name;
   END$$

   DELIMITER ;
